
package solutions.day21

import solutions.AbstractDayTest

class Day21Test: AbstractDayTest(Day21()) {
    override fun getPart1Data(): List<TestData> = listOf(
           TestData(listOf("../.. => ##./##./.##",
                   "#./.. => .../.#./##.",
                   "##/.. => .../.##/#.#",
                   ".#/#. => ##./#../#..",
                   "##/#. => .##/#.#/#..",
                   "##/## => ..#/.#./.##",
                   ".../.../... => #.../.##./...#/#...",
                   "#../.../... => ...#/..../..#./..##",
                   ".#./.../... => ..../.##./###./....",
                   "##./.../... => ###./#.##/..#./..#.",
                   "#.#/.../... => #.../.#../#..#/..#.",
                   "###/.../... => ..##/.##./#.../....",
                   ".#./#../... => #.##/..../..../#.##",
                   "##./#../... => .#.#/.#.#/##../.#..",
                   "..#/#../... => .###/####/.###/##..",
                   "#.#/#../... => ..../.#.#/..../####",
                   ".##/#../... => .##./##.#/.###/#..#",
                   "###/#../... => ####/...#/###./.###",
                   ".../.#./... => ..##/#..#/###./###.",
                   "#../.#./... => ###./..##/.#.#/.#.#",
                   ".#./.#./... => ..#./..#./##.#/##..",
                   "##./.#./... => #..#/###./..#./#.#.",
                   "#.#/.#./... => .###/#.../.#.#/.##.",
                   "###/.#./... => #.##/##../#.#./...#",
                   ".#./##./... => #.##/#.##/#.##/.###",
                   "##./##./... => ..##/#..#/.###/....",
                   "..#/##./... => #..#/.##./##../####",
                   "#.#/##./... => ###./###./..##/..##",
                   ".##/##./... => ###./##.#/.##./###.",
                   "###/##./... => ##../#..#/##../....",
                   ".../#.#/... => ##.#/..#./..##/##..",
                   "#../#.#/... => #..#/.###/.#../#.#.",
                   ".#./#.#/... => ####/#.##/.###/###.",
                   "##./#.#/... => #.../####/...#/.#.#",
                   "#.#/#.#/... => ...#/.#.#/#..#/#.##",
                   "###/#.#/... => ###./#.##/##.#/..##",
                   ".../###/... => ..../##.#/.#../..##",
                   "#../###/... => ####/..##/.##./.###",
                   ".#./###/... => #.#./#.#./#.../#..#",
                   "##./###/... => #..#/..##/#.##/#.#.",
                   "#.#/###/... => .##./##.#/.#../####",
                   "###/###/... => ####/##.#/.#../#.#.",
                   "..#/.../#.. => #..#/#.##/.###/.###",
                   "#.#/.../#.. => .##./#.../.#.#/....",
                   ".##/.../#.. => .#.#/.#.#/##../####",
                   "###/.../#.. => .#.#/.##./####/##.#",
                   ".##/#../#.. => .###/.###/.###/#...",
                   "###/#../#.. => ..##/#.../#.#./..#.",
                   "..#/.#./#.. => #.#./##../##../####",
                   "#.#/.#./#.. => ..../..##/#..#/..#.",
                   ".##/.#./#.. => #.##/#..#/##.#/.##.",
                   "###/.#./#.. => ...#/#.../#.#./.#..",
                   ".##/##./#.. => .##./#..#/.##./...#",
                   "###/##./#.. => ##.#/##.#/.##./...#",
                   "#../..#/#.. => ##../..#./..#./#.#.",
                   ".#./..#/#.. => #.#./##../#..#/#.##",
                   "##./..#/#.. => #.##/###./###./.#.#",
                   "#.#/..#/#.. => ..../...#/...#/#..#",
                   ".##/..#/#.. => #..#/#.#./..##/.##.",
                   "###/..#/#.. => ##../.#.#/.#../#.#.",
                   "#../#.#/#.. => ####/.##./.##./.##.",
                   ".#./#.#/#.. => ...#/.##./..#./.##.",
                   "##./#.#/#.. => .#.#/.##./..#./.#.#",
                   "..#/#.#/#.. => .#../##.#/##../#...",
                   "#.#/#.#/#.. => .#.#/..#./#.../##..",
                   ".##/#.#/#.. => ..#./#.#./###./#...",
                   "###/#.#/#.. => ..../#.#./..##/##.#",
                   "#../.##/#.. => .##./##../.#../..##",
                   ".#./.##/#.. => ##../#.#./#.../####",
                   "##./.##/#.. => ###./###./#.#./..##",
                   "#.#/.##/#.. => ...#/#..#/..#./###.",
                   ".##/.##/#.. => ..##/####/..../#.##",
                   "###/.##/#.. => .#.#/#.../.##./#...",
                   "#../###/#.. => ..#./.#.#/#..#/.##.",
                   ".#./###/#.. => ####/..../####/#.##",
                   "##./###/#.. => .###/..../#.#./####",
                   "..#/###/#.. => ###./#.#./.#.#/#...",
                   "#.#/###/#.. => #.#./#.#./..##/.##.",
                   ".##/###/#.. => #.##/.###/.##./#.##",
                   "###/###/#.. => #..#/.#../.#../.##.",
                   ".#./#.#/.#. => .#../.##./##../..##",
                   "##./#.#/.#. => .##./#.##/...#/#.#.",
                   "#.#/#.#/.#. => ##.#/###./#.#./..#.",
                   "###/#.#/.#. => ..../##../.###/###.",
                   ".#./###/.#. => .#.#/.###/..../#..#",
                   "##./###/.#. => #.../..#./#..#/.#..",
                   "#.#/###/.#. => .#../##.#/##.#/.###",
                   "###/###/.#. => #..#/.#.#/#.#./..#.",
                   "#.#/..#/##. => .#../.###/...#/#.##",
                   "###/..#/##. => ...#/...#/..##/...#",
                   ".##/#.#/##. => #.#./###./.##./####",
                   "###/#.#/##. => #.#./...#/...#/....",
                   "#.#/.##/##. => ###./#.../##.#/..#.",
                   "###/.##/##. => .#../#.../.###/.#..",
                   ".##/###/##. => #.../..#./..#./.###",
                   "###/###/##. => .#../.#../####/###.",
                   "#.#/.../#.# => ##.#/##../...#/##.#",
                   "###/.../#.# => ###./###./#..#/###.",
                   "###/#../#.# => .###/..#./.#../#...",
                   "#.#/.#./#.# => ##.#/.##./.#.#/##.#",
                   "###/.#./#.# => ...#/...#/#.##/.##.",
                   "###/##./#.# => #.../##../#.../....",
                   "#.#/#.#/#.# => ####/.#../..##/..##",
                   "###/#.#/#.# => ##../####/#.##/..##",
                   "#.#/###/#.# => ##../..../..../####",
                   "###/###/#.# => .#../.#.#/.###/.#.#",
                   "###/#.#/### => ##../####/###./...#",
                   "###/###/### => ###./#..#/##../.##."), "144")
    )

    override fun getPart2Data(): List<TestData> = listOf(
           TestData(listOf("../.. => ##./##./.##",
                   "#./.. => .../.#./##.",
                   "##/.. => .../.##/#.#",
                   ".#/#. => ##./#../#..",
                   "##/#. => .##/#.#/#..",
                   "##/## => ..#/.#./.##",
                   ".../.../... => #.../.##./...#/#...",
                   "#../.../... => ...#/..../..#./..##",
                   ".#./.../... => ..../.##./###./....",
                   "##./.../... => ###./#.##/..#./..#.",
                   "#.#/.../... => #.../.#../#..#/..#.",
                   "###/.../... => ..##/.##./#.../....",
                   ".#./#../... => #.##/..../..../#.##",
                   "##./#../... => .#.#/.#.#/##../.#..",
                   "..#/#../... => .###/####/.###/##..",
                   "#.#/#../... => ..../.#.#/..../####",
                   ".##/#../... => .##./##.#/.###/#..#",
                   "###/#../... => ####/...#/###./.###",
                   ".../.#./... => ..##/#..#/###./###.",
                   "#../.#./... => ###./..##/.#.#/.#.#",
                   ".#./.#./... => ..#./..#./##.#/##..",
                   "##./.#./... => #..#/###./..#./#.#.",
                   "#.#/.#./... => .###/#.../.#.#/.##.",
                   "###/.#./... => #.##/##../#.#./...#",
                   ".#./##./... => #.##/#.##/#.##/.###",
                   "##./##./... => ..##/#..#/.###/....",
                   "..#/##./... => #..#/.##./##../####",
                   "#.#/##./... => ###./###./..##/..##",
                   ".##/##./... => ###./##.#/.##./###.",
                   "###/##./... => ##../#..#/##../....",
                   ".../#.#/... => ##.#/..#./..##/##..",
                   "#../#.#/... => #..#/.###/.#../#.#.",
                   ".#./#.#/... => ####/#.##/.###/###.",
                   "##./#.#/... => #.../####/...#/.#.#",
                   "#.#/#.#/... => ...#/.#.#/#..#/#.##",
                   "###/#.#/... => ###./#.##/##.#/..##",
                   ".../###/... => ..../##.#/.#../..##",
                   "#../###/... => ####/..##/.##./.###",
                   ".#./###/... => #.#./#.#./#.../#..#",
                   "##./###/... => #..#/..##/#.##/#.#.",
                   "#.#/###/... => .##./##.#/.#../####",
                   "###/###/... => ####/##.#/.#../#.#.",
                   "..#/.../#.. => #..#/#.##/.###/.###",
                   "#.#/.../#.. => .##./#.../.#.#/....",
                   ".##/.../#.. => .#.#/.#.#/##../####",
                   "###/.../#.. => .#.#/.##./####/##.#",
                   ".##/#../#.. => .###/.###/.###/#...",
                   "###/#../#.. => ..##/#.../#.#./..#.",
                   "..#/.#./#.. => #.#./##../##../####",
                   "#.#/.#./#.. => ..../..##/#..#/..#.",
                   ".##/.#./#.. => #.##/#..#/##.#/.##.",
                   "###/.#./#.. => ...#/#.../#.#./.#..",
                   ".##/##./#.. => .##./#..#/.##./...#",
                   "###/##./#.. => ##.#/##.#/.##./...#",
                   "#../..#/#.. => ##../..#./..#./#.#.",
                   ".#./..#/#.. => #.#./##../#..#/#.##",
                   "##./..#/#.. => #.##/###./###./.#.#",
                   "#.#/..#/#.. => ..../...#/...#/#..#",
                   ".##/..#/#.. => #..#/#.#./..##/.##.",
                   "###/..#/#.. => ##../.#.#/.#../#.#.",
                   "#../#.#/#.. => ####/.##./.##./.##.",
                   ".#./#.#/#.. => ...#/.##./..#./.##.",
                   "##./#.#/#.. => .#.#/.##./..#./.#.#",
                   "..#/#.#/#.. => .#../##.#/##../#...",
                   "#.#/#.#/#.. => .#.#/..#./#.../##..",
                   ".##/#.#/#.. => ..#./#.#./###./#...",
                   "###/#.#/#.. => ..../#.#./..##/##.#",
                   "#../.##/#.. => .##./##../.#../..##",
                   ".#./.##/#.. => ##../#.#./#.../####",
                   "##./.##/#.. => ###./###./#.#./..##",
                   "#.#/.##/#.. => ...#/#..#/..#./###.",
                   ".##/.##/#.. => ..##/####/..../#.##",
                   "###/.##/#.. => .#.#/#.../.##./#...",
                   "#../###/#.. => ..#./.#.#/#..#/.##.",
                   ".#./###/#.. => ####/..../####/#.##",
                   "##./###/#.. => .###/..../#.#./####",
                   "..#/###/#.. => ###./#.#./.#.#/#...",
                   "#.#/###/#.. => #.#./#.#./..##/.##.",
                   ".##/###/#.. => #.##/.###/.##./#.##",
                   "###/###/#.. => #..#/.#../.#../.##.",
                   ".#./#.#/.#. => .#../.##./##../..##",
                   "##./#.#/.#. => .##./#.##/...#/#.#.",
                   "#.#/#.#/.#. => ##.#/###./#.#./..#.",
                   "###/#.#/.#. => ..../##../.###/###.",
                   ".#./###/.#. => .#.#/.###/..../#..#",
                   "##./###/.#. => #.../..#./#..#/.#..",
                   "#.#/###/.#. => .#../##.#/##.#/.###",
                   "###/###/.#. => #..#/.#.#/#.#./..#.",
                   "#.#/..#/##. => .#../.###/...#/#.##",
                   "###/..#/##. => ...#/...#/..##/...#",
                   ".##/#.#/##. => #.#./###./.##./####",
                   "###/#.#/##. => #.#./...#/...#/....",
                   "#.#/.##/##. => ###./#.../##.#/..#.",
                   "###/.##/##. => .#../#.../.###/.#..",
                   ".##/###/##. => #.../..#./..#./.###",
                   "###/###/##. => .#../.#../####/###.",
                   "#.#/.../#.# => ##.#/##../...#/##.#",
                   "###/.../#.# => ###./###./#..#/###.",
                   "###/#../#.# => .###/..#./.#../#...",
                   "#.#/.#./#.# => ##.#/.##./.#.#/##.#",
                   "###/.#./#.# => ...#/...#/#.##/.##.",
                   "###/##./#.# => #.../##../#.../....",
                   "#.#/#.#/#.# => ####/.#../..##/..##",
                   "###/#.#/#.# => ##../####/#.##/..##",
                   "#.#/###/#.# => ##../..../..../####",
                   "###/###/#.# => .#../.#.#/.###/.#.#",
                   "###/#.#/### => ##../####/###./...#",
                   "###/###/### => ###./#..#/##../.##."), "2169301")
    )

}
